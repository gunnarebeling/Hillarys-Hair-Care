// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HillarysHairCare.Migrations
{
    [DbContext(typeof(HillarysHareCareDbContext))]
    [Migration("20241120204437_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HillarysHareCare.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HillarysHareCare.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            PhoneNumber = "234-567-8901"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            PhoneNumber = "345-678-9012"
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob.brown@example.com",
                            Name = "Bob Brown",
                            PhoneNumber = "456-789-0123"
                        });
                });

            modelBuilder.Entity("HillarysHareCare.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 25.00m,
                            Type = "Haircut"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 10.00m,
                            Type = "Shampoo"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 20.00m,
                            Type = "Manicure"
                        },
                        new
                        {
                            Id = 4,
                            Cost = 30.00m,
                            Type = "Pedicure"
                        });
                });

            modelBuilder.Entity("HillarysHareCare.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "emma.watson@example.com",
                            IsActive = true,
                            Name = "Emma Watson",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            Id = 2,
                            Email = "liam.neeson@example.com",
                            IsActive = true,
                            Name = "Liam Neeson",
                            PhoneNumber = "876-543-2109"
                        },
                        new
                        {
                            Id = 3,
                            Email = "olivia.miller@example.com",
                            IsActive = false,
                            Name = "Olivia Miller",
                            PhoneNumber = "765-432-1098"
                        },
                        new
                        {
                            Id = 4,
                            Email = "james.smith@example.com",
                            IsActive = true,
                            Name = "James Smith",
                            PhoneNumber = "654-321-0987"
                        });
                });

            modelBuilder.Entity("HillarysHareCare.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TimeSlot");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Time = "08:00 AM"
                        },
                        new
                        {
                            Id = 2,
                            Time = "09:00 AM"
                        },
                        new
                        {
                            Id = 3,
                            Time = "10:00 AM"
                        },
                        new
                        {
                            Id = 4,
                            Time = "11:00 AM"
                        },
                        new
                        {
                            Id = 5,
                            Time = "12:00 PM"
                        },
                        new
                        {
                            Id = 6,
                            Time = "01:00 PM"
                        },
                        new
                        {
                            Id = 7,
                            Time = "02:00 PM"
                        },
                        new
                        {
                            Id = 8,
                            Time = "03:00 PM"
                        },
                        new
                        {
                            Id = 9,
                            Time = "04:00 PM"
                        },
                        new
                        {
                            Id = 10,
                            Time = "05:00 PM"
                        },
                        new
                        {
                            Id = 11,
                            Time = "06:00 PM"
                        });
                });

            modelBuilder.Entity("HillarysHareCare.Models.Appointment", b =>
                {
                    b.HasOne("HillarysHareCare.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHareCare.Models.Stylist", "Stylist")
                        .WithMany("Appointments")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHareCare.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("HillarysHareCare.Models.Service", b =>
                {
                    b.HasOne("HillarysHareCare.Models.Appointment", null)
                        .WithMany("Services")
                        .HasForeignKey("AppointmentId");
                });

            modelBuilder.Entity("HillarysHareCare.Models.Appointment", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("HillarysHareCare.Models.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HillarysHareCare.Models.Stylist", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
